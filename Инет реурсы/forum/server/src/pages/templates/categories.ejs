<!DOCTYPE html>
<html lang="ru">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Категории</title>
  <style>
    .modal { display: none; position: fixed; z-index: 1000; left: 0; top: 0; width: 100%; height: 100%; background-color: rgba(0,0,0,0.5); }
    .modal-content { position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); background-color: white; padding: 20px; border-radius: 8px; box-shadow: 0 4px 6px rgba(0,0,0,0.1); width: 90%; max-width: 500px; }
    .form-group { margin-bottom: 15px; }
    .form-group label { display: block; margin-bottom: 5px; font-weight: bold; }
    .form-group input, .form-group textarea { width: 100%; padding: 8px; border: 1px solid #ddd; border-radius: 4px; box-sizing: border-box; }
    .btn { padding: 10px 20px; border: none; border-radius: 4px; cursor: pointer; margin-right: 10px; }
    .btn-primary { background-color: #007bff; color: white; }
    .btn-secondary { background-color: #6c757d; color: white; }
    .error-message { color: red; margin-top: 10px; }
    .success-message { color: green; margin-top: 10px; }
  </style>
</head>
<body>
  <h1><%= heading %></h1>
  
  <% if (typeof user !== 'undefined' && user && user.role === 'ADMIN') { %>
    <button id="createCategoryBtn" class="btn btn-primary">Создать категорию</button>
  <% } %>
  
  <% if (error) { %>
    <div class="error-message"><%= error %></div>
  <% } %>
  
  <ul>
    <% categories.forEach(category => { %>
      <li>
        <a href="/page/category/<%= category.id %>">
          <%= category.name %>
        </a>
      </li>
    <% }); %>
  </ul>

  <!-- Модальное окно создания категории -->
  <div id="createCategoryModal" class="modal">
    <div class="modal-content">
      <h2>Создать категорию</h2>
      <form id="createCategoryForm">
        <div class="form-group">
          <label for="name">Название:</label>
          <input type="text" id="name" name="name" required>
        </div>
        
        <div class="form-group">
          <label for="description">Описание:</label>
          <textarea id="description" name="description" rows="3"></textarea>
        </div>
        
        <div class="form-group">
          <label for="order">Порядок (0-100):</label>
          <input type="number" id="order" name="order" min="0" max="100" value="0">
        </div>
        
        <div id="formMessage" class="error-message"></div>
        
        <div>
          <button type="submit" class="btn btn-primary">Создать</button>
          <button type="button" id="cancelBtn" class="btn btn-secondary">Отмена</button>
        </div>
      </form>
    </div>
  </div>

  <script>
    // Функция для получения токена из cookies
    function getToken() {
      const cookies = document.cookie.split(';');
      for (let cookie of cookies) {
        const [name, value] = cookie.trim().split('=');
        if (name === 'token' || name === 'session') {
          return decodeURIComponent(value);
        }
      }
      return null;
    }

    document.addEventListener('DOMContentLoaded', function() {
      const modal = document.getElementById('createCategoryModal');
      const createBtn = document.getElementById('createCategoryBtn');
      const cancelBtn = document.getElementById('cancelBtn');
      const form = document.getElementById('createCategoryForm');
      const formMessage = document.getElementById('formMessage');

      // Открытие модального окна
      if (createBtn) {
        createBtn.addEventListener('click', function() {
          modal.style.display = 'block';
        });
      }

      // Закрытие модального окна
      if (cancelBtn) {
        cancelBtn.addEventListener('click', function() {
          modal.style.display = 'none';
          formMessage.textContent = '';
          form.reset();
        });
      }

      // Закрытие при клике вне модального окна
      window.addEventListener('click', function(event) {
        if (event.target === modal) {
          modal.style.display = 'none';
          formMessage.textContent = '';
          form.reset();
        }
      });

      // Отправка формы
      if (form) {
        form.addEventListener('submit', async function(e) {
          e.preventDefault();
          
          const token = getToken();
          if (!token) {
            formMessage.textContent = 'Ошибка авторизации. Пожалуйста, войдите снова.';
            formMessage.className = 'error-message';
            return;
          }

          const formData = {
            name: document.getElementById('name').value,
            description: document.getElementById('description').value,
            order: parseInt(document.getElementById('order').value)
          };

          try {
            const response = await fetch('/api/category/create', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json',
                'Authorization': `Bearer ${token}`
              },
              body: JSON.stringify(formData)
            });

            const result = await response.json();

            if (result.success) {
              formMessage.textContent = 'Категория успешно создана!';
              formMessage.className = 'success-message';
              
              setTimeout(() => {
                window.location.reload();
              }, 1500);
            } else {
              formMessage.textContent = result.message || 'Ошибка при создании категории';
              formMessage.className = 'error-message';
            }
          } catch (error) {
            formMessage.textContent = 'Ошибка сети при создании категории';
            formMessage.className = 'error-message';
            console.error('Create category error:', error);
          }
        });
      }
    });
  </script>
</body>
</html>