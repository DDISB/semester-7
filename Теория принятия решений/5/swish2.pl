% Экспертная система по подбору автомобиля

% Факты о машинах
машина('Volkswagen_Passat').
машина('Lada_Vesta').
машина('Toyota_Mark_2').
машина('Porsche_Cayenne').
машина('Volkswagen_Tiguan').
машина('Lada_Niva').
машина('Chery_Tiggo_8_Pro_Max').
машина('Aurus_Senat').

% Параметры
бюджет('до_3M').
бюджет('более_3М').

мощность_двигателя('до_250лс').
мощность_двигателя('более_250лс').

тип_двигателя('бензин').
тип_двигателя('дизель').

коробка_передач('механика').
коробка_передач('не_механика').

производство('россия').
производство('китай').
производство('иномарка').

назначение_машины('семейная').
назначение_машины('веселая').

продаётся_в_рф('да').
продаётся_в_рф('нет').

% Вспомогательные предикаты
получить_ответ(Вопрос, Категория, Ответ) :-
    format('~w ', [Вопрос]),
    read(Input),
    (
        (member(Input, ['да','нет','до_3M','более_3М','до_250лс','более_250лс',
                       'бензин','дизель','механика','не_механика',
                       'россия','китай','иномарка','семейная','веселая']), 
         Ответ = Input);
        (format('Некорректный ответ. Попробуйте снова.~n'),
         получить_ответ(Вопрос, Категория, Ответ))
    ).

% Динамические факты для хранения ответов пользователя
:- dynamic текущий_бюджет/1.
:- dynamic текущая_мощность/1.
:- dynamic текущий_тип_двигателя/1.
:- dynamic текущая_коробка/1.
:- dynamic текущее_производство/1.
:- dynamic текущее_назначение/1.
:- dynamic текущая_продажа_в_рф/1.

% Правила системы
правило('Chery_Tiggo_8_Pro_Max', 0.8) :-
    текущее_производство('китай').

правило('Aurus_Senat', 0.8) :-
    текущее_производство('россия'),
    текущая_мощность('более_250лс').

правило('Lada_Niva', 0.9) :-
    текущее_производство('россия'),
    текущий_бюджет('до_3M'),
    текущая_коробка('механика').

правило('Lada_Vesta', 0.8) :-
    текущее_производство('россия'),
    текущий_бюджет('до_3M'),
    текущая_коробка('механика').

правило('Porsche_Cayenne', 0.7) :-
    текущий_бюджет('более_3М'),
    текущая_мощность('более_250лс'),
    текущий_тип_двигателя('бензин').

правило('Aurus_Senat', 0.3) :-
    текущий_бюджет('более_3М'),
    текущая_мощность('более_250лс'),
    текущий_тип_двигателя('бензин').

правило('Volkswagen_Tiguan', 0.9) :-
    текущий_бюджет('более_3М'),
    текущая_мощность('до_250лс').

правило('Toyota_Mark_2', 0.5) :-
    текущее_назначение('веселая'),
    текущая_коробка('механика').

правило('Lada_Niva', 0.5) :-
    текущее_назначение('веселая'),
    текущая_коробка('механика').

правило('Porsche_Cayenne', 0.9) :-
    текущее_назначение('веселая'),
    текущая_продажа_в_рф('нет').

правило('Volkswagen_Passat', 0.5) :-
    текущее_назначение('семейная'),
    текущая_продажа_в_рф('нет').

правило('Volkswagen_Tiguan', 0.5) :-
    текущее_назначение('семейная'),
    текущая_продажа_в_рф('нет').

правило('Volkswagen_Passat', 0.8) :-
    текущий_тип_двигателя('дизель').

правило('Toyota_Mark_2', 0.9) :-
    текущее_производство('иномарка'),
    текущий_бюджет('до_3M'),
    текущее_назначение('веселая').

% Основная функция запуска
запустить_систему :-
    format('Экспертная система по подбору автомобиля~n'),
    format('======================================~n~n'),
    
    % Очищаем предыдущие ответы
    retractall(текущий_бюджет(_)),
    retractall(текущая_мощность(_)),
    retractall(текущий_тип_двигателя(_)), % Исправлено: было current_тип_двигателя
    retractall(текущая_коробка(_)),
    retractall(текущее_производство(_)),
    retractall(текущее_назначение(_)),
    retractall(текущая_продажа_в_рф(_)),
    
    % Получаем ответы
    получить_ответ('Какой у вас бюджет? (до_3M/более_3М): ', бюджет, Бюджет),
    assertz(текущий_бюджет(Бюджет)),
    
    получить_ответ('Какая мощность двигателя? (до_250лс/более_250лс): ', мощность_двигателя, Мощность),
    assertz(текущая_мощность(Мощность)),
    
    получить_ответ('Какой тип двигателя? (бензин/дизель): ', тип_двигателя, ТипДвигателя),
    assertz(текущий_тип_двигателя(ТипДвигателя)),
    
    получить_ответ('Какая коробка передач? (механика/не_механика): ', коробка_передач, Коробка),
    assertz(текущая_коробка(Коробка)),
    
    получить_ответ('Какое производство? (россия/китай/иномарка): ', производство, Производство),
    assertz(текущее_производство(Производство)),
    
    получить_ответ('Какое назначение машины? (семейная/веселая): ', назначение_машины, Назначение),
    assertz(текущее_назначение(Назначение)),
    
    получить_ответ('Продается в РФ? (да/нет): ', продаётся_в_рф, ПродаетсяВРФ),
    assertz(текущая_продажа_в_рф(ПродаетсяВРФ)),
    
    format('~nРезультаты подбора:~n'),
    format('===================~n'),
    
    % Находим все подходящие машины
    findall(Машина-Вероятность, правило(Машина, Вероятность), Результаты),
    
    % Выводим результаты
    (   Результаты = [] ->
        format('Нет подходящих машин по вашим критериям.~n')
    ;   sort(Результаты, УникальныеРезультаты), % Исправлено: используем sort вместо list_to_set для лучшего отображения
        вывести_результаты(УникальныеРезультаты)
    ).

% Вывод результатов
вывести_результаты([]).
вывести_результаты([Машина-Вероятность|Остальные]) :-
    format('~w: ~2f~n', [Машина, Вероятность]),
    вывести_результаты(Остальные).